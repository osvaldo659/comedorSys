/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package comedorsys;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Administrador
 */
public class PanelHistoricos extends javax.swing.JPanel {

    
    
    /**
     * Creates new form PanelHistoricos
     */
    public PanelHistoricos() {
        initComponents();
        
        try { //valida y verifica que la libreria este instalada
            Class.forName("com.mysql.cj.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PanelHistoricos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String ip="localhost"; //colocar la direccion de la base de dato
        String bd="bdcomedor"; //nombre de la basee de datos
        String login="root"; //usuario de la base de datos
        String password=""; //contrase√±a de la base de datos
        String url= "jdbc:mysql://"+ip+"/"+bd+"?useTimezone=true&serverTimezone=UTC";
        String consulf;
        
        try {
            //CREA LA CONXION CON LA BASE DE DATOS
            Connection conexion = DriverManager.getConnection(url, login, password);
            if(conexion!=null){System.out.println("Connecting Historicos ["+conexion+"] OK");}
            Statement stat = conexion.createStatement(); //Permite hacer registro y consultas
            
            consulf = "SELECT * FROM frecuencias";
            ResultSet rs = stat.executeQuery(consulf);
            ArrayList<Integer> histogramaCanal = new ArrayList<Integer>();
            ArrayList<String> nombres = new ArrayList<String>();
            while (rs.next()) //Corre cada registro de la consulta hasta fin (false)
            {
                //System.out.println("Plato="+rs.getObject("platos")+
                // ", Frecuencia="+rs.getObject("contador"));
                histogramaCanal.add(Integer.parseInt(rs.getString("contador")));
                nombres.add(rs.getString("platos"));
            }
            rs.close();
        
        //int[] ret = {1,2,5,10};
        int[] ret = new int[histogramaCanal.size()];
        for (int m=0; m < ret.length; m++)
                    {
                        ret[m] = histogramaCanal.get(m).intValue();
                    }
            DibujarGrafico ObjDibujaHisto=new DibujarGrafico();
            //Color color = new color();
            ObjDibujaHisto.crearHistograma(ret, jPanel1, Color.red, nombres);          
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se pudo cargar la imagen", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        button1 = new java.awt.Button();

        setBackground(new java.awt.Color(239, 235, 206));

        jPanel1.setName("jPanel1"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 332, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 168, Short.MAX_VALUE)
        );

        button1.setLabel("Actualizar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
        
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    public javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public JPanel getjPanel1() {
        return jPanel1;
    }
}
